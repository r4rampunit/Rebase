from django.shortcuts import render
import pandas as pd
import plotly.graph_objs as go
from plotly.offline import plot


def dashboard(request):
    data = request.session.get("data", [])
    variable_options = request.session.get('variable_options', [])
    country_options = request.session.get('country_options', [])
    model_options = request.session.get('model_options', [])

    selected_variable = request.GET.get('variable', variable_options[0] if variable_options else None)
    selected_country = request.GET.get('country', country_options[0] if country_options else None)
    selected_model = request.GET.get('model', model_options[0] if model_options else None)

    filtered_data = [row for row in data if row['Variable'] == selected_variable and
                     row['Region'] == selected_country and
                     row['Model'] == selected_model]

    if filtered_data:
        years = [int(year) for year in filtered_data[0].keys() if year.isdigit()]
        years.sort()

        trace_single = go.Scatter(x=years, y=[row[str(year)] for row in filtered_data for year in years],
                                  mode='lines+markers',
                                  name=f"{selected_variable} for {selected_country} ({selected_model})")

        layout = go.Layout(title=f"{selected_variable} for {selected_country} ({selected_model})",
                           xaxis=dict(title="Year"),
                           yaxis=dict(title=selected_variable))

        fig_single = go.Figure(data=[trace_single], layout=layout)

        plot_div_single = plot(fig_single, output_type='div', include_plotlyjs=False)
    else:
        plot_div_single = None

    context = {
        'variable_options': variable_options,
        'country_options': country_options,
        'model_options': model_options,
        'selected_variable': selected_variable,
        'selected_country': selected_country,
        'selected_model': selected_model,
        'filtered_data': filtered_data,  # Add this line
        'plot_div_single': plot_div_single,
    }

    return render(request, 'dashboard.html', context)











<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Dashboard</title>
    <!-- Plotly.js -->
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
</head>
<body>
    <h1>Dashboard</h1>
    <form action="{% url 'dashboard' %}" method="get">
        <label for="variable">Variable:</label>
        <select name="variable" id="variable">
            {% for option in variable_options %}
                <option value="{{ option }}" {% if option == selected_variable %}selected{% endif %}>{{ option }}</option>
            {% endfor %}
        </select>
        <br>
        <label for="country">Country:</label>
        <select name="country" id="country">
            {% for option in country_options %}
                <option value="{{ option }}" {% if option == selected_country %}selected{% endif %}>{{ option }}</option>
            {% endfor %}
        </select>
        <br>
        <label for="model">Model:</label>
        <select name="model" id="model">
            {% for option in model_options %}
                <option value="{{ option }}" {% if option == selected_model %}selected{% endif %}>{{ option }}</option>
            {% endfor %}
        </select>
        <br>
        <input type="submit" value="Submit">
    </form>

    {% if plot_div_single %}
        {{ plot_div_single|safe }}
    {% endif %}

    {% if filtered_data %}
        <h2>Data</h2>
        <table>
            <thead>
                <tr>
                    {% for column in filtered_data.0.keys %}
                        <th>{{ column }}</th>
                    {% endfor %}
                </tr>
            </thead>
            <tbody>
                {% for row in filtered_data %}
                    <tr>
                        {% for value in row.values %}
                            <td>{{ value }}</td>
                        {% endfor %}
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    {% else %}
        <p>No data available for the selected options.</p>
    {% endif %}
</body>
</html>