import pandas as pd
from datetime import datetime, timedelta

# Read the data from the Excel file
workbook_path = r"C:\Users\45363901\PycharmProjects\pythonProject\pythonProject1\Revenue_Balance_Forcast\Balance_Forecast_FRP_V4 NZ.xlsx"
data = pd.read_excel(workbook_path, sheet_name="MEV - NZ")

# Create a list of unique country ISO codes
countries = data['ISOCODES'].unique().tolist()

# Hardcoded column names for the dates
date_cols = ['3/31/2021', '6/30/2021', '9/30/2021', '12/31/2021', '3/31/2022', '6/30/2022', '9/30/2022', '12/31/2022', '3/31/2023'] + [d.strftime('%m/%d/%Y') for d in pd.date_range(start='6/30/2023', end='12/31/2052', freq='Q')]

# Hardcoded MEV Key and MEV Variable mapping
mev_mapping = {
    'GDP': 'GDP',
    'GDP DOL': 'GDP DOL',
    'PH': 'PH',
    'ROA': 'ROA'
}

region_mapping = {
    'Asia ex-GSC/GLT': 'Asia ex-GSC/GLT',
    'EOE': 'Eurozone',
    'HBUK': 'UK',
    'LATAM': 'Latin America',
    'MENAT': 'World',
    'US': 'US',
    'Canada': 'Canada',
    'ROG': 'ROG (Rest of Group)'
}

# Create an empty DataFrame with the desired structure
mev_data = pd.DataFrame(columns=['MEV Key', 'MEV Variable', 'Country', 'ISO Code', 'Region Mapped'] + date_cols)

# Iterate over each row in the original data
for row in data.itertuples(index=False):
    country = row.Country
    iso_code = row.ISOCODES
    mev_var = row._fields[3]  # Assuming the variable name is in the 4th column
    region_mapped = region_mapping.get(row._fields[4], 'N/A')  # Assuming the region mapped is in the 5th column

    # Skip if the variable is not in the mapping
    if mev_var not in mev_mapping:
        continue

    mev_key = f"{region_mapped}_{mev_mapping[mev_var]}"

    # Ensure GDP_YR can be converted to an integer, if not, skip this row
    try:
        gdp_year = int(row.GDP_YR)
        if gdp_year < 1:
            continue
    except (ValueError, TypeError):
        continue

    # Get the start date and end date for the variable
    start_date = datetime(year=gdp_year, month=1, day=1)
    end_date = start_date + timedelta(days=365)

    # Check if the key exists in mev_data, if not, add it
    if mev_key not in mev_data.index:
        mev_data.loc[mev_key] = [mev_key, mev_mapping[mev_var], country, iso_code, region_mapped] + [None] * len(date_cols)

    # Populate the values in the date columns
    for date_col in date_cols:
        date = datetime.strptime(date_col, '%m/%d/%Y')
        if start_date <= date < end_date:
            if pd.isna(mev_data.loc[mev_key, date_col]):
                mev_data.loc[mev_key, date_col] = row._fields[3]  # Assuming the variable value is in the 4th column
            else:
                mev_data.loc[mev_key, date_col] = f"{mev_data.loc[mev_key, date_col]}, {row._fields[3]}"

# Write the data to a new Excel file
mev_data.to_excel('mev_data.xlsx', index=False)