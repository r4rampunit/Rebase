import openpyxl
from openpyxl.utils import get_column_letter

def Weighted_column_required(sheet):
    merged_ranges = list(sheet.merged_cells.ranges)
    columns_to_delete = []

    for merged_range in merged_ranges:
        if merged_range.max_col - merged_range.min_col == 4:  # IFRS9 1Q24 Scenarios merged cell
            # Find the 'Weighted' column
            weighted_col = merged_range.max_col
            down1_col = weighted_col - 1

            # Add these columns to the list to delete
            columns_to_delete.extend([weighted_col, down1_col])

    # Delete columns from right to left
    for col in sorted(set(columns_to_delete), reverse=True):
        sheet.delete_cols(col)

    # Adjust merged cells
    new_merged_ranges = []
    for merged_range in merged_ranges:
        new_min_col = merged_range.min_col
        new_max_col = merged_range.max_col

        # Adjust the range based on deleted columns
        for col in columns_to_delete:
            if merged_range.min_col < col <= merged_range.max_col:
                new_max_col -= 1
            elif col < merged_range.min_col:
                new_min_col -= 1
                new_max_col -= 1

        if new_min_col != new_max_col:
            new_range = openpyxl.worksheet.cell_range.CellRange(
                min_col=new_min_col,
                min_row=merged_range.min_row,
                max_col=new_max_col,
                max_row=merged_range.max_row
            )
            new_merged_ranges.append(new_range)

    # Clear all merges and set new ones
    sheet.merged_cells.ranges.clear()
    for new_range in new_merged_ranges:
        sheet.merge_cells(range_string=str(new_range))

    print("Processing complete.")

# Usage
workbook_path = r".\Input\Mapping_File Copy.xlsx"
workbook = openpyxl.load_workbook(workbook_path)
sheet = workbook['Sheet1']  # Replace 'Sheet1' with your actual sheet name
Weighted_column_required(sheet)
workbook.save(workbook_path)






import pandas as pd
import openpyxl
from openpyxl.utils import get_column_letter

def Weighted_column_required(sheet):
    workbook_path = r".\Input\Mapping_File Copy.xlsx"
    df = pd.read_excel(workbook_path, sheet_name="Data_Edge")

    merged_ranges = list(sheet.merged_cells.ranges)
    columns_to_delete = []

    for index, row in df.iterrows():
        description = row['Description']
        weighted_required = row['Weighted_required']

        for merged_range in merged_ranges:
            top_left_cell = sheet.cell(row=merged_range.min_row, column=merged_range.min_col)

            # Check if the cell is not empty before accessing its value
            if top_left_cell.data_type != 'n':
                top_left_cell_value = top_left_cell.value

                if top_left_cell_value == description:
                    if weighted_required.lower() == 'no':
                        if merged_range.max_col - merged_range.min_col == 4:  # IFRS9 1Q24 Scenarios merged cell
                            # Find the 'Weighted' column
                            weighted_col = merged_range.max_col
                            down1_col = weighted_col - 1

                            # Add these columns to the list to delete
                            columns_to_delete.extend([weighted_col, down1_col])

    # Delete columns from right to left
    for col in sorted(set(columns_to_delete), reverse=True):
        sheet.delete_cols(col)

    # Adjust merged cells
    new_merged_ranges = []
    for merged_range in merged_ranges:
        new_min_col = merged_range.min_col
        new_max_col = merged_range.max_col

        # Adjust the range based on deleted columns
        for col in columns_to_delete:
            if merged_range.min_col < col <= merged_range.max_col:
                new_max_col -= 1
            elif col < merged_range.min_col:
                new_min_col -= 1
                new_max_col -= 1

        if new_min_col != new_max_col:
            new_range = openpyxl.worksheet.cell_range.CellRange(
                min_col=new_min_col,
                min_row=merged_range.min_row,
                max_col=new_max_col,
                max_row=merged_range.max_row
            )
            new_merged_ranges.append(new_range)

    # Clear all merges and set new ones
    sheet.merged_cells.ranges.clear()
    for new_range in new_merged_ranges:
        sheet.merge_cells(range_string=str(new_range))

    print("Processing complete.")

# Usage
workbook_path = r".\Input\Mapping_File Copy.xlsx"
workbook = openpyxl.load_workbook(workbook_path)
sheet = workbook['Sheet1']  # Replace 'Sheet1' with your actual sheet name
Weighted_column_required(sheet)
workbook.save(workbook_path)