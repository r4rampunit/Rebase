from django.http import JsonResponse
from django.shortcuts import render

def mi_chart(request):
    folders = get_folders()
    selected_folder = request.GET.get("folder", None)
    selected_subfolder = request.GET.get("subfolder", None)
    subfolders = get_subfolders(selected_folder) if selected_folder else []

    if request.headers.get('x-requested-with') == 'XMLHttpRequest':
        selected_items = request.GET.get('selectedItems', {})
        # Print the selected items for testing purposes
        print(selected_items)
        return JsonResponse({'status': 'success', 'selectedItems': selected_items})

    if selected_folder and selected_subfolder:
        dataframes = read_excel_files(selected_folder, selected_subfolder)
    else:
        dataframes = []

    context = {
        'folders': folders,
        'subfolders': subfolders,
        'dataframes': dataframes,
    }

    return render(request, 'mi_templates/mi_chart.html', context)







function updateSelectedItems() {
  var allSelected = true;
  var selectedItems = {};

  $('.multiselect').each(function() {
    var dropdownName = $(this).attr('name');
    var selected = $(this).select2('data');
    if (selected.length == 0) {
      allSelected = false;
    }
    selectedItems[dropdownName] = selected.map(item => item.text);
  });

  if (allSelected) {
    var html = '<h3>Selected Items:</h3>';
    for (var dropdown in selectedItems) {
      html += '<p><strong>' + dropdown + ':</strong> ' + selectedItems[dropdown].join(', ') + '</p>';
    }
    $('#selectedItems').html(html).show();

    // Send selected items to the server via AJAX
    $.ajax({
      url: window.location.href,
      method: 'POST',
      data: {
        selectedItems: JSON.stringify(selectedItems),
        csrfmiddlewaretoken: getCookie('csrftoken')  // Add this line
      },
      success: function(response) {
        console.log('Selected items sent to server successfully.');
        // Update the table with the new data
        $('#tableContainer').html(response);
      },
      error: function(xhr, status, error) {
        console.error('Error sending selected items to server:', error);
      }
    });
  } else {
    $('#selectedItems').hide();
  }
}


function getCookie(name) {
  let cookieValue = null;
  if (document.cookie && document.cookie !== '') {
    const cookies = document.cookie.split(';');
    for (let i = 0; i < cookies.length; i++) {
      const cookie = cookies[i].trim();
      if (cookie.substring(0, name.length + 1) === (name + '=')) {
        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
        break;
      }
    }
  }
  return cookieValue;
}




from django.http import HttpResponse
from django.views.decorators.csrf import csrf_exempt
import json

@csrf_exempt
def mi_chart(request):
    if request.method == 'POST':
        selected_items = json.loads(request.POST.get('selectedItems', '{}'))

        # Process the selected items
        # For example, you can filter your data based on the selections

        # Generate the new table HTML
        table_html = generate_table_html(selected_items)  # You need to implement this function

        return HttpResponse(table_html)
    else:
        # Your existing code for GET requests
        ...






<body>
  <img src="/static/img/HSBC_hex.png" alt="Logo" class="logo">
  <center>
    <h1>Multiple Multiselect Dropdowns</h1>
    <hr/>
    <div class="dropdowns-container">
      <div class="dropdowns-wrapper">
        <div class="dropdown-wrapper">
          <select class="multiselect" name="trees" multiple>
            <option value="Oak">Oak</option>
            <option value="Pine">Pine</option>
            <option value="Maple">Maple</option>
            <option value="Birch">Birch</option>
            <option value="Elm">Elm</option>
          </select>
        </div>
        <div class="dropdown-wrapper">
          <select class="multiselect" name="animals" multiple>
            <option value="Lion">Lion</option>
            <option value="Elephant">Elephant</option>
            <option value="Giraffe">Giraffe</option>
            <option value="Tiger">Tiger</option>
            <option value="Bear">Bear</option>
          </select>
        </div>
        <div class="dropdown-wrapper">
          <select class="multiselect" name="flowers" multiple>
            <option value="Rose">Rose</option>
            <option value="Tulip">Tulip</option>
            <option value="Daisy">Daisy</option>
            <option value="Sunflower">Sunflower</option>
            <option value="Lily">Lily</option>
          </select>
        </div>
        <div class="dropdown-wrapper">
          <select class="multiselect" name="rivers" multiple>
            <option value="Amazon">Amazon</option>
            <option value="Nile">Nile</option>
            <option value="Yangtze">Yangtze</option>
            <option value="Mississippi">Mississippi</option>
            <option value="Danube">Danube</option>
          </select>
        </div>
        <div class="dropdown-wrapper">
          <select class="multiselect" name="countries" multiple>
            <option value="USA">USA</option>
            <option value="China">China</option>
            <option value="India">India</option>
            <option value="Brazil">Brazil</option>
            <option value="Russia">Russia</option>
          </select>
        </div>
      </div>
    </div>
    <div id="tableContainer"></div>
    {% csrf_token %}
  </center>
</body>




$(document).ready(function() {
  $(".multiselect").select2({
    placeholder: 'Select one or more options',
    closeOnSelect: false,
    allowClear: true,
    tags: true
  });

  function updateSelectedItems() {
    var selectedItems = {};
    $('.multiselect').each(function() {
      var dropdownName = $(this).attr('name');
      var selected = $(this).select2('data');
      selectedItems[dropdownName] = selected.map(item => item.text);
    });

    // Send selected items to the server via AJAX
    $.ajax({
      url: '/mi_chart/',  // Update this URL to match your Django URL configuration
      method: 'POST',
      data: {
        selectedItems: JSON.stringify(selectedItems),
        csrfmiddlewaretoken: getCookie('csrftoken')
      },
      success: function(response) {
        $('#tableContainer').html(response);
      },
      error: function(xhr, status, error) {
        console.error('Error sending selected items to server:', error);
      }
    });
  }

  $('.multiselect').on('change', updateSelectedItems);

  // Initial call to populate the table
  updateSelectedItems();
});

function getCookie(name) {
  let cookieValue = null;
  if (document.cookie && document.cookie !== '') {
    const cookies = document.cookie.split(';');
    for (let i = 0; i < cookies.length; i++) {
      const cookie = cookies[i].trim();
      if (cookie.substring(0, name.length + 1) === (name + '=')) {
        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
        break;
      }
    }
  }
  return cookieValue;
}




from django.http import HttpResponse
from django.views.decorators.csrf import csrf_exempt
import json

@csrf_exempt
def mi_chart(request):
    if request.method == 'POST':
        selected_items = json.loads(request.POST.get('selectedItems', '{}'))

        # Generate the table HTML
        html = "<table border='1'>"
        html += "<tr><th>Category</th><th>Selected Items</th></tr>"

        for category, items in selected_items.items():
            html += f"<tr><td>{category.capitalize()}</td><td>{', '.join(items)}</td></tr>"

        html += "</table>"

        return HttpResponse(html)
    else:
        return HttpResponse("This view only accepts POST requests.")





















from django.http import HttpResponse
from django.shortcuts import render
from django.views.decorators.csrf import csrf_exempt
import json

@csrf_exempt
def mi_chart(request):
    if request.method == 'POST':
        selected_items = json.loads(request.POST.get('selectedItems', '{}'))

        # Generate the table HTML
        html = generate_table_html(selected_items)

        return HttpResponse(html)
    else:
        # For GET requests, render the initial page with an empty table
        initial_data = {
            'trees': [],
            'animals': [],
            'flowers': [],
            'rivers': [],
            'countries': []
        }
        initial_table = generate_table_html(initial_data)
        context = {
            'initial_table': initial_table
        }
        return render(request, 'your_template_name.html', context)

def generate_table_html(selected_items):
    html = "<table border='1'>"
    html += "<tr><th>Category</th><th>Selected Items</th></tr>"

    for category, items in selected_items.items():
        html += f"<tr><td>{category.capitalize()}</td><td>{', '.join(items)}</td></tr>"

    html += "</table>"
    return html
















<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Multiple Multiselect Dropdowns</title>
    <!-- Include necessary CSS and JS files here -->
</head>
<body>
    <img src="/static/img/HSBC_hex.png" alt="Logo" class="logo">
    <center>
        <h1>Multiple Multiselect Dropdowns</h1>
        <hr/>
        <div class="dropdowns-container">
            <div class="dropdowns-wrapper">
                <div class="dropdown-wrapper">
                    <select class="multiselect" name="trees" multiple>
                        <option value="Oak">Oak</option>
                        <option value="Pine">Pine</option>
                        <option value="Maple">Maple</option>
                        <option value="Birch">Birch</option>
                        <option value="Elm">Elm</option>
                    </select>
                </div>
                <div class="dropdown-wrapper">
                    <select class="multiselect" name="animals" multiple>
                        <option value="Lion">Lion</option>
                        <option value="Elephant">Elephant</option>
                        <option value="Giraffe">Giraffe</option>
                        <option value="Tiger">Tiger</option>
                        <option value="Bear">Bear</option>
                    </select>
                </div>
                <div class="dropdown-wrapper">
                    <select class="multiselect" name="flowers" multiple>
                        <option value="Rose">Rose</option>
                        <option value="Tulip">Tulip</option>
                        <option value="Daisy">Daisy</option>
                        <option value="Sunflower">Sunflower</option>
                        <option value="Lily">Lily</option>
                    </select>
                </div>
                <div class="dropdown-wrapper">
                    <select class="multiselect" name="rivers" multiple>
                        <option value="Amazon">Amazon</option>
                        <option value="Nile">Nile</option>
                        <option value="Yangtze">Yangtze</option>
                        <option value="Mississippi">Mississippi</option>
                        <option value="Danube">Danube</option>
                    </select>
                </div>
                <div class="dropdown-wrapper">
                    <select class="multiselect" name="countries" multiple>
                        <option value="USA">USA</option>
                        <option value="China">China</option>
                        <option value="India">India</option>
                        <option value="Brazil">Brazil</option>
                        <option value="Russia">Russia</option>
                    </select>
                </div>
            </div>
        </div>
        <div id="tableContainer">
            {{ initial_table|safe }}
        </div>
        {% csrf_token %}
    </center>
    <!-- Include your JavaScript code here -->
</body>
</html>
