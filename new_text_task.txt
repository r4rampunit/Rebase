<body>
    <div class="logo-container"></div>
    <h1>MI Tool Visualization</h1>
    <div class="dashboard-container">
        <div class="dropdown-container">
            <select name="folder" id="folder">
                <option value="">Select Variable</option>
                {% for folder in folders %}
                    <option value="{{ folder }}" {% if folder == selected_folder %}selected{% endif %}>{{ folder }}</option>
                {% endfor %}
            </select>
        </div>
        {% if selected_folder %}
            <h2>Selected Folder: {{ selected_folder }}</h2>
        {% endif %}
        {% if dataframes %}
            <h2>Data from Excel Files</h2>
            {% for df_name, df in dataframes.items %}
                <h3>{{ df_name }}</h3>
                <p>Columns: {{ df.columns|join:", " }}</p>
                <p>Rows: {{ df.shape.0 }}</p>
                <table border="1">
                    <thead>
                        <tr>
                            {% for col in df.columns %}
                                <th>{{ col }}</th>
                            {% endfor %}
                        </tr>
                    </thead>
                    <tbody>
                        {% for _, row in df.iterrows %}
                            {% if forloop.first %}
                                <tr>
                                    {% for cell in row %}
                                        <td>{{ cell }}</td>
                                    {% endfor %}
                                </tr>
                            {% endif %}
                        {% endfor %}
                    </tbody>
                </table>
            {% endfor %}
        {% else %}
            <p>No data to display</p>
        {% endif %}
    </div>

    <script>
        document.getElementById('folder').addEventListener('change', function() {
            window.location.href = '?folder=' + this.value;
        });
    </script>
</body>










import os
from django.shortcuts import render
import pandas as pd

FOLDER_PATH = r"C:\Users\45363901\MI Tool Visualization\punitproject\Folder"

def get_folders():
    folders = [f.name for f in os.scandir(FOLDER_PATH) if f.is_dir()]
    print("Folders:", folders)  # Debug print
    return folders

def read_excel_files(folder_name):
    folder_path = os.path.join(FOLDER_PATH, folder_name)
    print(f"Looking for Excel files in: {folder_path}")  # Debug print
    excel_files = [f for f in os.listdir(folder_path) if f.endswith('.xlsx')]
    print(f"Excel files found: {excel_files}")  # Debug print
    dataframes = {}
    for excel_file in excel_files:
        file_path = os.path.join(folder_path, excel_file)
        print(f"Attempting to read: {file_path}")  # Debug print
        try:
            df = pd.read_excel(file_path)
            dataframes[excel_file] = df
            print(f"Successfully read {excel_file}")  # Debug print
        except Exception as e:
            print(f"Error reading {excel_file}: {str(e)}")  # Debug print
    return dataframes

def dashboard(request):
    folders = get_folders()
    selected_folder = request.GET.get('folder')
    dataframes = {}

    print(f"Selected folder: {selected_folder}")  # Debug print

    if selected_folder:
        print(f"Attempting to read files from: {os.path.join(FOLDER_PATH, selected_folder)}")  # Debug print
        dataframes = read_excel_files(selected_folder)

    print(f"Dataframes: {dataframes.keys()}")  # Debug print

    context = {
        'folders': folders,
        'dataframes': dataframes,
        'selected_folder': selected_folder,
    }

    return render(request, 'dashboard.html', context)